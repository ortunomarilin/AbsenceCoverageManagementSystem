
@model AbsenceListViewModel


@{
    ViewData["Title"] = "List";
}

<div class="view-header mb-2 ">
    <h3>Manage Absence Requests</h3>
</div>


@if (TempData["SucessMessage"] != null)
{
    <div class="alert alert-success  alert-dismissible ">
        <button class="close" data-dismiss="alert">&times;</button>
        <h6 class="m-0">
            <span>
                <i class="fas fa-check-square"></i>
            </span>
            Success
        </h6>
        <p class="small m-0">@TempData["SucessMessage"]</p>
    </div>
}

@if (TempData["FailureMessage"] != null)
{
    <div class="alert alert-danger  alert-dismissible">
        <button class="close" data-dismiss="alert">&times;</button>
        <h6>
            <span>
                <i class="fas fa-exclamation-triangle"></i>
            </span>
            Failure
        </h6>
        <p class="small m-0">@TempData["FailureMessage"]</p>

    </div>
}

<div class="content-container shadow-sm  mt-2">

    <form asp-action="SearchOptions" method="post">

        <div class="form-row ">
            <div class="form-group col-md-4 ">
                <div class="input-group mr-2">
                    <div class="input-group">
                        <input class="form-control  form-control-sm  bg-white" placeholder="Enter Last Name or First Name" name="SearchTerm" asp-for="@Model.Grid.Search" />
                        <div class="input-group-append">
                            <span class="input-group-text  form-icon">
                                <i class="fas fa-search"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="form-row ">
            <div class="form-group col-md-2 ">
                <label class="form-label small ">From Date</label>
                <div class="input-group mr-2">
                    <div class="input-group">
                        <input id="SD" class="form-control  form-control-sm  bg-white" autocomplete="off" placeholder="mm/dd/yyyy" type="text" name="fromdate" asp-for="@Model.Grid.FromDate" />
                        <div class="input-group-append">
                            <span class="input-group-text  form-icon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group col-md-2">
                <label class="form-label small ">To Date</label>
                <div class="input-group ">
                    <div class="input-group ">
                        <input id="ED" class="form-control form-control-sm bg-white" autocomplete="off" placeholder="mm/dd/yyyy" type="text" name="todate" asp-for="@Model.Grid.ToDate" />
                        <div class="input-group-append">
                            <span class="input-group-text  form-icon">
                                <i class="fas fa-calendar-alt"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="form-row ">
            <div class="form-group col-md-2">
                <label class="form-label small ">Absence Types</label>
                <select class="form-control form-control-sm" name="filters" asp-for="@Model.Grid.AbsenceType"
                        asp-items="@(new SelectList(Model.AbsenceTypes,
                                        "AbsenceTypeId", "Name", Model.Grid.AbsenceType))">
                    <option value="all">All</option>
                </select>
            </div>
            <div class="form-group col-md-2">
                <label class="form-label small ">Duration</label>
                <select class="form-control form-control-sm" name="filters" asp-for="@Model.Grid.Duration"
                        asp-items="@(new SelectList(Model.DurationTypes,
                                        "DurationTypeId", "Name", Model.Grid.Duration))">
                    <option value="all">All</option>
                </select>
            </div>

            <div class="form-group col-md-2">
                <label class="form-label small ">Need Coverage</label>
                <select class="form-control form-control-sm" name="filters" asp-for="@Model.Grid.NeedCoverage">
                    <option value="all">All</option>
                    <option value="true">Yes</option>
                    <option value="false">No</option>
                </select>
            </div>

            <div class="form-group col-md-2">
                <label class="form-label small ">Status</label>
                <select class="form-control form-control-sm" name="filters" asp-for="@Model.Grid.AbsenceStatus"
                        asp-items="@(new SelectList(Model.AbsenceStatusTypes,
                                        "AbsenceStatusId", "Name", Model.Grid.AbsenceStatus))">
                    <option value="all">All </option>
                </select>
            </div>

            <div class=" ml-2 pt-4">
                <button type="submit" class="btn btn-sm btn-primary  search-btn ">
                    Search
                </button>
            </div>
            <div class=" ml-2 pt-4">
                <button class="btn btn-sm btn-outline-primary  search-btn " type="submit" name="clear" value="true">
                    Clear
                </button>
            </div>

        </div>

    </form>

</div>



<div class="row justify-content-end">
    <div class="col-md-2 text-right mr-4  pt-2">
        <h6 class="form-label font-weight-normal ">Showing Page @Model.Grid.PageNumber of @Model.TotalPages</h6>
    </div>
</div>


<div class="overflow-auto table-container">
    <table class="table table-sm shadow-sm  mb-0">
        <thead>
            <tr>
                <th class="text-center">Details</th>

                <th>
                    Name
                    <a asp-action="List"
                       asp-route-sortby=@nameof(AbsenceCoverageMS.Models.DomainModels.User.LastName)
                       asp-route-sortdirection=@Model.Grid.GetNewSortDirection(nameof(AbsenceCoverageMS.Models.DomainModels.User.LastName))
                       asp-route-search="@Model.Grid.Search"
                       asp-route-fromdate="@Model.Grid.FromDate"
                       asp-route-todate="@Model.Grid.ToDate"
                       asp-route-absencetype="@Model.Grid.AbsenceType"
                       asp-route-duration="@Model.Grid.Duration"
                       asp-route-needcoverage="@Model.Grid.NeedCoverage"
                       asp-route-absencestatus="@Model.Grid.AbsenceStatus"
                       class=" @(Model.Grid.SortBy == nameof(AbsenceCoverageMS.Models.DomainModels.User.LastName) ? "text-primary" : "text-secondary")">
                        <span>
                            <i class="fas fa-sort-down"></i>
                        </span>

                    </a>

                </th>

                <th>
                    Date
                    <a asp-action="List"
                       asp-route-sortby=@nameof(AbsenceRequest.StartDate)
                       asp-route-sortdirection=@Model.Grid.GetNewSortDirection(nameof(AbsenceRequest.StartDate))
                       asp-route-search="@Model.Grid.Search"
                       asp-route-fromdate="@Model.Grid.FromDate"
                       asp-route-todate="@Model.Grid.ToDate"
                       asp-route-absencetype="@Model.Grid.AbsenceType"
                       asp-route-duration="@Model.Grid.Duration"
                       asp-route-needcoverage="@Model.Grid.NeedCoverage"
                       asp-route-absencestatus="@Model.Grid.AbsenceStatus"
                       class=" @(Model.Grid.SortBy == nameof(AbsenceRequest.StartDate) ? "text-primary" : "text-secondary")">
                        <span>
                            <i class="fas fa-sort-down"></i>
                        </span>
                    </a>
                </th>
                <th>
                    Absent Type
                    <a asp-action="List"
                       asp-route-sortby=@nameof(AbsenceRequest.AbsenceType)
                       asp-route-sortdirection=@Model.Grid.GetNewSortDirection(nameof(AbsenceRequest.AbsenceType))
                       asp-route-search="@Model.Grid.Search"
                       asp-route-fromdate="@Model.Grid.FromDate"
                       asp-route-todate="@Model.Grid.ToDate"
                       asp-route-absencetype="@Model.Grid.AbsenceType"
                       asp-route-duration="@Model.Grid.Duration"
                       asp-route-needcoverage="@Model.Grid.NeedCoverage"
                       asp-route-absencestatus="@Model.Grid.AbsenceStatus"
                       class=" @(Model.Grid.SortBy == nameof(AbsenceRequest.AbsenceType) ? "text-primary" : "text-secondary")">
                        <span>
                            <i class="fas fa-sort-down"></i>
                        </span>
                    </a>
                </th>
                <th>
                    Duration
                    <a asp-action="List"
                       asp-route-sortby=@nameof(AbsenceRequest.DurationType)
                       asp-route-sortdirection=@Model.Grid.GetNewSortDirection(nameof(AbsenceRequest.DurationType))
                       asp-route-search="@Model.Grid.Search"
                       asp-route-fromdate="@Model.Grid.FromDate"
                       asp-route-todate="@Model.Grid.ToDate"
                       asp-route-absencetype="@Model.Grid.AbsenceType"
                       asp-route-duration="@Model.Grid.Duration"
                       asp-route-needcoverage="@Model.Grid.NeedCoverage"
                       asp-route-absencestatus="@Model.Grid.AbsenceStatus"
                       class=" @(Model.Grid.SortBy == nameof(AbsenceRequest.DurationType) ? "text-primary" : "text-secondary")">
                        <span>
                            <i class="fas fa-sort-down"></i>
                        </span>
                    </a>
                </th>
                <th>Time</th>
                <th>Need Coverage</th>
                <th>
                    Status
                    <a asp-action="List"
                       asp-route-sortby=@nameof(AbsenceRequest.AbsenceStatus)
                       asp-route-sortdirection=@Model.Grid.GetNewSortDirection(nameof(AbsenceRequest.AbsenceStatus))
                       asp-route-search="@Model.Grid.Search"
                       asp-route-fromdate="@Model.Grid.FromDate"
                       asp-route-todate="@Model.Grid.ToDate"
                       asp-route-absencetype="@Model.Grid.AbsenceType"
                       asp-route-duration="@Model.Grid.Duration"
                       asp-route-needcoverage="@Model.Grid.NeedCoverage"
                       asp-route-absencestatus="@Model.Grid.AbsenceStatus"
                       class=" @(Model.Grid.SortBy == nameof(AbsenceRequest.AbsenceStatus) ? "text-primary" : "text-secondary")">
                        <span>
                            <i class="fas fa-sort-down"></i>
                        </span>
                    </a>
                </th>
                <th class="text-center"  colspan="2" >Actions</th>
            </tr>
        </thead>
        <tbody>

            @foreach (AbsenceRequest ar in Model.AbsenceRequests)
            {
            <tr>
                <td class="text-center">
                    <a class="btn btn-outline-primary  btn-sm" asp-action="Details" asp-route-id="@ar.AbsenceRequestId">
                        <span>
                            <i class="fas fa-binoculars"></i>
                        </span>
                    </a>
                </td>

                <td>
                    @ar.User.LastName, @ar.User.FirstName
                </td>

                @if (ar.StartDate == ar.EndDate)
                {
                    <td>@ar.StartDate.Value.ToShortDateString()</td>
                }
                else
                {
                    <td>@ar.StartDate.Value.ToShortDateString() - @ar.EndDate.Value.ToShortDateString()</td>
                }

                <td>@ar.AbsenceType.Name</td>
                <td>@ar.DurationType.Name</td>
                <td>@ar.StartTime.Value.ToShortTimeString() - @ar.EndTime.Value.ToShortTimeString()</td>
                <td>@(ar.NeedCoverage == true ? "Yes" : "No")</td>
                <td>@ar.AbsenceStatus.Name</td>

                @if (ar.AbsenceStatus.Name == "Canceled" || ar.AbsenceStatus.Name == "Denied")
                {
                    <td></td>
                    <td></td>
                }
                else if (ar.AbsenceStatus.Name == "Submitted")
                {
                    <td>
                        <partial name="_ApproveModalPartial" model="@ar" />
                    </td>

                    <td>
                        <partial name="_DenyModalPartial" model="@ar" />
                    </td>
                }
                else
                {
                    <td></td>
                    <td><partial name="_CancelModalPartial" model="@ar" /> </td>
                }
            </tr>
            }

        </tbody>
    </table>
</div>

<div class="row">
    <div class="col-md-12  ml-2">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a asp-action="List"
               asp-route-sortby="@Model.Grid.SortBy"
               asp-route-sortdirection="@Model.Grid.SortDirection"
               asp-route-search="@Model.Grid.Search"
               asp-route-fromdate="@Model.Grid.FromDate"
               asp-route-todate="@Model.Grid.ToDate"
               asp-route-absencetype="@Model.Grid.AbsenceType"
               asp-route-duration="@Model.Grid.Duration"
               asp-route-needcoverage="@Model.Grid.NeedCoverage"
               asp-route-status="@Model.Grid.AbsenceStatus"
               asp-route-pagenumber="@i"
               asp-route-pagesize="@Model.Grid.PageSize"
               class="btn btn-link   @(i==Model.Grid.PageNumber ? "active" : "" )">
                @if (i == Model.Grid.PageNumber)
                {
                    <u>@i</u>

                }
                else
                {
                    @i
                }
            </a>
        }
    </div>
</div>







<script>

    $(function () {
        $("#SD").datepicker({
            beforeShowDay: $.datepicker.noWeekends,
        });
    });

    $(function () {
        $("#ED").datepicker({
            beforeShowDay: $.datepicker.noWeekends,
        });
    });


</script>


